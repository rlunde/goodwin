It looks like it might be fun to try out electron (http://electron.atom.io) for
building HTML/CSS/JS apps that run as desktop apps and use Node.js. I'd like
the client side to be as interactive as a desktop app, but portable, and 
transparent so the developers who eventually use it can verify that nobody
has snuck evil stuff into it.

The quick start tutorial is:
http://electron.atom.io/docs/latest/tutorial/quick-start/
The quick start demo is:

# Clone the Quick Start repository
$ git clone https://github.com/atom/electron-quick-start

# Go into the repository
$ cd electron-quick-start

# Install the dependencies and run
$ npm install && npm start

I tried installing electron-prebuilt globally via this:
$ npm install --global electron-prebuilt

But then when I tried to run it I got this error:
$ electron .
dyld: Library not loaded: /usr/local/lib/libffmpeg.dylib
  Referenced from: /usr/local/lib/node_modules/electron-prebuilt/dist/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework
    Reason: image not found

I'm trying over with a local node_modules install like that above, and a modified copy of the package.json.

I ended up installing bootstrap and jquery locally too.
To install those yourself:
  cd ./app
  npm install jquery
  npm install bootstrap

I think the next thing to do with this project is to pick something tiny and fun
to do a code generation snippet for. Prompt the user, and say "sorry, so far all
I know how to do is make fun CSS animations for existing HTML or SVG elements".
Then learn how to parse input, have a Q&A session with the user, etc.

I think the most important thing to get going right from the start, and keep
working on, is a wise-ass attitude like Archie Goodwin has in the Nero Wolfe
books. Not everyone will enjoy that, of course, but it's a way to make something
unique and interesting right away, rather than just another code generator app.

I think I should position the input panel at the bottom, and intermix messages
from the user and from Goodwin as if they were in Slack or something above that.

I think I'll try taking a look at the web apps for slack, hipchat, etc. (or try
to find something simpler) and see how they mix input and output in a "chat" 
stream.

Or maybe there's a tutorial for a chat client that does that?

