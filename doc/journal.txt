Before November 2017:
==================================================================

I evaluated using python or ruby to do the CLI version, but
since I want to eventually have an electron-based client, it
made sense to stick with node.

There's a cool article on making a python CLI here, though:
https://stormpath.com/blog/building-simple-cli-interfaces-in-python

The node article I'm starting with is:
https://developer.atlassian.com/blog/2015/11/scripting-with-node/

If I move on to a node environment with automatic babel compilation
(which seems like a good thing to try), I might start here:

https://github.com/babel/example-node-server


==================================================================
November 9, 2017:
==================================================================
I had fun working on the node CLI for Goodwin, but discovered
something interesting: a chat interface is a good way to do some
things, but not a good way to do *everything*. Basically, once
you want the user to do something very specific, such as pick
an item from a list, fill in values needed to generate code, etc.,
they're better off interacting with a form.

Even the chat interface is probably best done in a way that resembles
what you see in slack or hipchat. My current idea is to have the
chat input at the bottom, and use the right hand side to collect 
info using dynamic form elements.

I'll start by trying to lay out something like that.


==================================================================
November 14, 2017:
==================================================================
I spent a couple of days on sideauth (just to avoid forgetting what
I was doing there). Now I want to:
a) move the files from under cli client (giving up on a separate CLI)
b) make an outline of the basic electron app layout


==================================================================
Friday, November 17, 2017
==================================================================

I'd like to try to do a little test-first development on this project,
but I'm not sure how to begin. I think maybe I should have two top
levels -- one a regular web app, and one an electron app. The regular 
web app could use node/express, perhaps.

I think that might just double the effort and magnify the complexity
though. I'll start by looking at spectron:
https://github.com/electron/spectron

==================================================================
Sunday, November 19, 2017
==================================================================

I'm trying to get a simple layout working. I think I'm stuck in my same
old rut, trying to get two divs to line up next to each other, each of
which takes up a fixed percentage of the containing box. 

TODO: add "simple" CSS code generation to what goodwin generates!

==================================================================
Monday, November 20, 2017
==================================================================

Finally got the two divs to line up side by side. Honestly! Why on
earth is that so hard? Most of the stupid StackOverflow questions I found
on it were "closed as duplicates", and most of the remaining ones were wrong.
I think the people who "close as duplicates" without saying duplicates
of *what* are ... well, "jerks" is about the most polite term I can think of.

==================================================================
Tuesday, November 21, 2017
==================================================================

There's at least one very annoying layout issue remaining, which is that the
inputtext box for the chat interface sticks out into the form div. 

OK, figured that out (needed to add bootstrap classes to the divs and the
textarea), but there are still a few layout things to figure out. I'll add them
to a todo file.

==================================================================
Wednesday, November 22, 2017
==================================================================

I have a little script that I use to pick a random project and a random kind
of thing to do (heavily weighted towards goodwin). Today's task is documentation
for goodwin. I think I'll start by going through each file under the doc 
directory, and just doing minor editing and writing a todo list for it. Then
I'll brainstorm a list of other documentation I need. I guess I should move
all my todo files and this journal under doc as well, so I don't have to hunt
all over the place for it.

==================================================================
Thursday, November 23, 2017
==================================================================

Today's task is "goodwin/design". I can take that to mean either
layout/UI/UX, or code design, or both.

I want to try making the client with React, so I'll start by thinking
about:
1) what should the chat dialog look like?
2) how should chat interaction work?
3) how should form interaction work?

See chat-notes.txt and form-notes.txt for starts at those


==================================================================
Tuesday, November 28, 2017
==================================================================

I started taking a class on CodeSchool on CSS Flexbox, which I 
suddenly realized is exactly what I need for laying out the
main content of the client app (aside from the navbar and the
footer).

 If I use react, I'll also need to use react-bootstrap I assume:
https://react-bootstrap.github.io/components.html#page-layout

There's an explanation here for why you need react-bootstrap (it's just
for the javascript/DOM interactions, not the CSS):
https://stackoverflow.com/questions/38015494/can-we-use-pure-bootstrap-with-react-js
